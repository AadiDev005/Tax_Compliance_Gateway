services:
  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - CLUSTER_ID=$(uuidgen) # Generate a new UUID
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - "2181:2181"
  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=tax_compliance
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
  api-gateway:
    image: tax_compliance_gateway-api-gateway
    environment:
      - GIN_MODE=release
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
  tax-engine:
    image: tax_compliance_gateway-tax-engine
    environment:
      - GIN_MODE=release
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - kafka
  audit-service:
    image: tax_compliance_gateway-audit-service
    environment:
      - GIN_MODE=release
    ports:
      - "8081:8081"
    depends_on:
      - postgres
volumes:
  pg_data:
grafana:
  image: grafana/grafana:latest
  ports:
    - "3000:3000"
prometheus:
  image: prom/prometheus:latest
  ports:
    - "9090:9090"
  volumes:
    - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
business-portal:
  build: ./services/business-portal
  ports:
    - "8083:8083"
